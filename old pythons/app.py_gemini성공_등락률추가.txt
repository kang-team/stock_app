import os
import datetime
from flask import Flask, render_template
from pykrx.stock import get_market_ohlcv_by_date

app = Flask(__name__)

@app.route("/")
def home():
    today_dt = datetime.datetime.today()
    actual_trade_date_dt = None
    df = None

    for i in range(7): # 최대 7일까지 역순으로 찾아봅니다.
        current_date_dt = today_dt - datetime.timedelta(days=i)
        current_date_str = current_date_dt.strftime("%Y%m%d")

        df = get_market_ohlcv_by_date(current_date_str, current_date_str, "003230") # 삼양식품 종목코드

        if not df.empty:
            actual_trade_date_dt = current_date_dt
            break

    price_message = "주가 정보를 가져올 수 없습니다. (최근 7일간 데이터 없음)"
    display_date = "알 수 없음"
    change_info = "" # 등락 정보 추가

    if actual_trade_date_dt is not None: # actual_trade_date_dt 가 None이 아니면 (데이터를 찾았으면)
        display_date = actual_trade_date_dt.strftime("%Y년 %m월 %d일")
        
        current_price = df['종가'].iloc[0]
        change_rate = df['등락률'].iloc[0] # 등락률 가져오기 (퍼센트)
        
        # 전일 대비 등락 계산 (단위: 원)
        # 등락률이 0이 아니면 계산 가능. (종가 / (1 + 등락률/100)) - 종가 를 하면 전일 종가와 현재 종가 차이
        # pykrx의 등락률은 (오늘 종가 - 전일 종가) / 전일 종가 * 100 으로 계산됩니다.
        # 따라서 전일 종가 = 오늘 종가 / (1 + 등락률/100) 입니다.
        # 전일 대비 = 오늘 종가 - 전일 종가
        
        previous_day_price = round(current_price / (1 + change_rate / 100)) # 전일 종가 추정
        daily_change = current_price - previous_day_price # 전일 대비 변화량

        # 등락 부호 (색상 표시를 위해)
        change_sign = ""
        color = "black"
        if daily_change > 0:
            change_sign = "▲"
            color = "red"
        elif daily_change < 0:
            change_sign = "▼"
            color = "blue"

        price_message = f"{display_date} 삼양식품 종가: {current_price:,}원"
        
        # HTML에 표시할 등락 정보 추가
        change_info = f"<br><span style='color:{color};'>{change_sign} {daily_change:,}원 ({change_rate:.2f}%)</span>"
        # .2f는 소수점 둘째 자리까지 표시, :,는 천 단위 콤마


    return render_template("index.html", message=price_message, change_info=change_info)

if __name__ == "__main__":
    port = int(os.environ.get("PORT", 8000))
    app.run(host="0.0.0.0", port=port, debug=True)