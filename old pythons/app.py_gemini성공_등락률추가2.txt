import os
import datetime
from flask import Flask, render_template
from pykrx.stock import get_market_ohlcv_by_date # 이 함수만 사용합니다!

app = Flask(__name__)

@app.route("/")
def home():
    today_dt = datetime.datetime.today()

    price_message = "주가 정보를 가져올 수 없습니다."
    change_info = ""
    display_date = "알 수 없음"

    current_price = None
    daily_change = 0
    change_rate = 0.0

    # 오늘 포함 최대 7일까지의 일별 데이터를 가져옵니다.
    # 이렇게 하면 가장 최근 영업일과 그 이전 영업일 데이터를 모두 확보할 수 있습니다.
    start_date_for_ohlcv = (today_dt - datetime.timedelta(days=7)).strftime("%Y%m%d")
    end_date_for_ohlcv = today_dt.strftime("%Y%m%d")

    df_ohlcv_range = get_market_ohlcv_by_date(start_date_for_ohlcv, end_date_for_ohlcv, "003230")

    if not df_ohlcv_range.empty:
        # 가장 최근 거래일의 데이터 (df의 마지막 행)
        latest_day_data = df_ohlcv_range.iloc[-1]
        
        actual_trade_date_dt = datetime.datetime.strptime(latest_day_data.name.strftime("%Y%m%d"), "%Y%m%d")
        display_date = actual_trade_date_dt.strftime("%Y년 %m월 %d일")
        current_price = int(latest_day_data['종가']) # 가장 최근 종가 (정수형)

        # 전일 종가 계산을 위한 데이터
        if len(df_ohlcv_range) >= 2: # 최소 2일치 데이터가 있어야 전일 종가 비교 가능
            previous_day_data = df_ohlcv_range.iloc[-2]
            previous_day_price = int(previous_day_data['종가'])
            
            daily_change = current_price - previous_day_price # 전일 대비 가격 (등락액)
            
            if previous_day_price != 0: # 0으로 나누는 것 방지
                change_rate = (daily_change / previous_day_price) * 100
            else:
                change_rate = 0.0
        else:
            # 1일치 데이터만 있는 경우 (전일 종가 비교 불가능)
            daily_change = 0
            change_rate = 0.0
            price_message = f"{display_date} 종가: {current_price:,}원 (전일 정보 없음)" # 이 메시지는 전일 정보가 없을 때만 표시

        # 메시지 구성 (시장 상황과 무관하게 '종가' 기준으로 표시)
        price_message = f"{display_date} 종가: {current_price:,}원"
        
        # 전일 대비 등락 정보 (데이터가 충분할 때만)
        if len(df_ohlcv_range) >= 2:
            change_sign = ""
            color = "black"
            if daily_change > 0:
                change_sign = "▲"
                color = "red"
            elif daily_change < 0:
                change_sign = "▼"
                color = "blue"
            
            change_info = f"<br><span style='color:{color};'>전일대비 {change_sign} {abs(daily_change):,}원 ({change_rate:.2f}%)</span>"
        else:
            change_info = "<br><span>전일 대비 정보 없음</span>"

    return render_template("index.html", message=price_message, change_info=change_info)

if __name__ == "__main__":
    port = int(os.environ.get("PORT", 8000))
    app.run(host="0.0.0.0", port=port, debug=True)